pipeline {
	agent any
    //agent { label 'ubuntu' }
    environment {
        DOCKER_IMAGE_TAG = 'simple-java-app:1.0.0'
        GHCR_REGISTRY = 'ghcr.io'   
    }
    stages {
        stage('Maven Package') {           
            steps {
                script{
                    sh "mvn clean package"
                    sh 'mv target/myweb*.war target/newapp.war'
                }
            }
        }
        stage('Build Docker Image') {    
            steps {
                script {
                    sh "docker build -f Dockerfile-app -t ${DOCKER_IMAGE_TAG} ."
                }
            }
        }
	
         stage('Login to GitHub Container Registry') {
              steps {
                 script {
                     withCredentials([usernamePassword(credentialsId: 'GH_PAT_TOKEN', usernameVariable: 'GHCR_USERNAME', passwordVariable: 'MYGH-TOKEN')]) {
                     sh "echo ${MYGH-TOKEN} | docker login --username ${GHCR_USERNAME} --password-stdin ghcr.io" }
		     sh "docker tag ${DOCKER_IMAGE_TAG} ${GHCR_REGISTRY}/${DOCKER_IMAGE_TAG}-alpha"
     		     sh "docker push ${GHCR_REGISTRY}/${DOCKER_IMAGE_TAG}-alpha"
                 }
             }
          }  
      
             stage('Remove Previous Container'){
               steps {
                  script {
                  try{
        	        sh 'docker rm -f simple-java-app'
        	         }catch(error){
        	          //do nothing if there is an exception
                           }
                     }
          	 }
         	}
         stage('Docker deployment'){
          steps {
	      script {
                    sh 'docker run -dit -p 8081:8080 --name simple-java-app ${GHCR_REGISTRY}/${DOCKER_IMAGE_TAG}-alpha' 
                }
           }
         }
    }
}

    
